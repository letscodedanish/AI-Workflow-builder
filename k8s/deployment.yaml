apiVersion: apps/v1
kind: Deployment
metadata:
  name: genai-stack-frontend
  labels:
    app: genai-stack
    component: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: genai-stack
      component: frontend
  template:
    metadata:
      labels:
        app: genai-stack
        component: frontend
    spec:
      containers:
      - name: frontend
        image: genai-stack-frontend:latest
        ports:
        - containerPort: 80
        env:
        - name: VITE_SUPABASE_URL
          valueFrom:
            configMapKeyRef:
              name: genai-stack-config
              key: supabase_url
        - name: VITE_SUPABASE_ANON_KEY
          valueFrom:
            secretKeyRef:
              name: genai-stack-secrets
              key: supabase_anon_key
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: genai-stack-backend
  labels:
    app: genai-stack
    component: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: genai-stack
      component: backend
  template:
    metadata:
      labels:
        app: genai-stack
        component: backend
    spec:
      containers:
      - name: backend
        image: genai-stack-backend:latest
        ports:
        - containerPort: 8000
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: genai-stack-secrets
              key: database_url
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: genai-stack-secrets
              key: openai_api_key
        - name: SERPAPI_KEY
          valueFrom:
            secretKeyRef:
              name: genai-stack-secrets
              key: serpapi_key
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chromadb
  labels:
    app: genai-stack
    component: chromadb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: genai-stack
      component: chromadb
  template:
    metadata:
      labels:
        app: genai-stack
        component: chromadb
    spec:
      containers:
      - name: chromadb
        image: chromadb/chroma:latest
        ports:
        - containerPort: 8000
        volumeMounts:
        - name: chroma-storage
          mountPath: /chroma/chroma
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
      volumes:
      - name: chroma-storage
        persistentVolumeClaim:
          claimName: chroma-pvc
